{"version":3,"sources":["webpack:///./task/task5.js","webpack:///./task/task1.js","webpack:///./task/task2.js","webpack:///./task/task3.js","webpack:///./task/task6.js","webpack:///./task/task4.js","webpack:///./task/task7.js"],"names":["inputRef","document","querySelector","outputRef","oninput","innerHTML","value","categoriesRef","querySelectorAll","console","log","length","forEach","el","textContent","ingredientsListRef","listEl","map","item","createElement","append","galleryRef","markupArr","arr","liEl","imgEl","alt","src","url","createMarkup","join","markupString","outerHTML","createStringMarkup","insertAdjacentHTML","onblur","this","getAttribute","classList","remove","add","counterRef","valueRef","counterValue","addEventListener","event","act","target","spanRef","e","style","fontSize","currentTarget"],"mappings":"8EAAA,IAAMA,EAAWC,SAASC,cAAc,eAClCC,EAAYF,SAASC,cAAc,gBAGzCF,EAASI,QAAU,WACfD,EAAUE,UAAYL,EAASM,Q,kGCK7BC,EAAgBN,SAASO,iBAAiB,SAEhDC,QAAQC,IAAR,YAAwBH,EAAcI,OAAtC,eACAJ,EAAcK,SAAQ,SAAAC,GAAE,OAAEJ,QAAQC,IAAR,cAA0BG,EAAGX,cAAc,MAAMY,YAAjD,6BACDD,EAAGL,iBAAiB,MAAMG,W,cCL3CI,EAAqBd,SAASC,cAAc,gBAWlD,IAAMc,EApBY,CAChB,WACA,QACA,SACA,WACA,SACA,YAMiBC,KAAI,SAAAJ,GACnB,IAAMK,EAAOjB,SAASkB,cAAc,MAEnC,OADAD,EAAKJ,YAAcD,EACZK,KAMVH,EAAmBK,OAAnB,MAAAL,EAA6BC,G,cCHzBK,EAAapB,SAASC,cAAc,YAc1C,IAAMoB,EAbN,SAAsBC,GAWlB,OATaA,EAAIN,KAAI,SAAAJ,GACnB,IAAMW,EAAQvB,SAASkB,cAAc,MAC/BM,EAAQxB,SAASkB,cAAc,OAIrC,OAHAM,EAAMC,IAAMb,EAAGa,IACfD,EAAME,IAAMd,EAAGe,IACfJ,EAAKJ,OAAOK,GACLD,KAKKK,CAhCL,CACX,CACED,IACE,gHACFF,IAAK,gCAEP,CACEE,IACE,gHACFF,IAAK,kDAEP,CACEE,IACE,gHACFF,IAAK,6BAmBeJ,EAAUQ,KAAK,IAMvC,IAAMC,EAJN,SAA4BR,GAExB,OADgBA,EAAIN,KAAI,SAAAJ,GAAE,OAAEA,EAAGmB,aAGdC,CAAmBX,GAAWQ,KAAK,IACxDT,EAAWa,mBAAmB,aAAcH,G,4DCxC7B9B,SAASC,cAAc,qBAG/BiC,OAAS,WACXC,KAAK9B,MAAMK,OAASyB,KAAKC,aAAa,gBAGhCD,KAAK9B,MAAMK,OAASyB,KAAKC,aAAa,gBAF3CD,KAAKE,UAAUC,OAAO,SACtBH,KAAKE,UAAUE,IAAI,aAMnBJ,KAAKE,UAAUC,OAAO,WACtBH,KAAKE,UAAUE,IAAI,Y,mBCb3B,IAAMC,EAAaxC,SAASC,cAAc,YACpCwC,EAAWD,EAAWvC,cAAc,UAGtCyC,EAAe,EAGnBF,EAAWG,iBAAiB,SAY5B,SAAmBC,GACf,IAAMC,EAAMD,EAAME,OAAOV,aAAa,eAC3B,cAARS,IAXHH,GAAc,GAcH,cAARG,IATHH,GAAc,GAYdD,EAAS5B,YAAc6B,M,mBC3B3B,IAAM3C,EAAWC,SAASC,cAAc,sBAClC8C,EAAU/C,SAASC,cAAc,SAEvCF,EAAS4C,iBAAiB,SAC1B,SAAoBK,GAChBD,EAAQE,MAAMC,SAAWF,EAAEG,cAAc9C,MAAQ,U","file":"main.450f78269cb9e04e5cd5.js","sourcesContent":["const inputRef = document.querySelector('#name-input');\r\nconst outputRef = document.querySelector('#name-output');\r\n\r\n\r\ninputRef.oninput = function(){\r\n    outputRef.innerHTML = inputRef.value\r\n}","// const listEl = document.querySelectorAll('#categories>li');\r\n// // const listUl = listEl.forEach(el=>{\r\n// //    console.dir(el.querySelector('ul')); \r\n// // });\r\n// // console.log(listEl);\r\n\r\n// const arrlistEl = [...listEl];\r\n// console.log(arrlistEl);\r\n// const listUl = arrlistEl.map(el=>el.querySelector('ul').querySelectorAll('li'));\r\n// console.log(listUl);\r\nconst categoriesRef = document.querySelectorAll('.item');\r\n// console.log(categoriesRef);\r\nconsole.log(`В списке ${categoriesRef.length} категории.`);\r\ncategoriesRef.forEach(el=>console.log(`Категория: ${el.querySelector('h2').textContent}.\r\n Количество элементов: ${el.querySelectorAll('li').length}`));","const ingredients = [\r\n    'Картошка',\r\n    'Грибы',\r\n    'Чеснок',\r\n    'Помидоры',\r\n    'Зелень',\r\n    'Приправы',\r\n  ];\r\n\r\n  const ingredientsListRef = document.querySelector('#ingredients');\r\n\r\n  function createMarkup(arr){\r\n    const ingr = arr.map(el=>{\r\n      const item = document.createElement('li')\r\n       item.textContent = el\r\n       return item;\r\n    })\r\n    return ingr;\r\n  };\r\n  // console.log(createMarkup(ingredients));\r\n  const listEl = createMarkup(ingredients);\r\n    ingredientsListRef.append(...listEl);\r\n\r\n  // const listEl = ingredients.map(el=>{\r\n  //     const item = document.createElement('li')\r\n  //     item.textContent = el\r\n  //     return item;\r\n  // });\r\n//   ingredientsListRef.append(...listEl);\r\n\r\n// const listElMap = ingredients.map(el=>`<li>${el}</li>`)\r\n\r\n// ingredientsListRef.insertAdjacentHTML('beforeend', listElMap);\r\n","const images = [\r\n    {\r\n      url:\r\n        'https://images.pexels.com/photos/140134/pexels-photo-140134.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n      alt: 'White and Black Long Fur Cat',\r\n    },\r\n    {\r\n      url:\r\n        'https://images.pexels.com/photos/213399/pexels-photo-213399.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n      alt: 'Orange and White Koi Fish Near Yellow Koi Fish',\r\n    },\r\n    {\r\n      url:\r\n        'https://images.pexels.com/photos/219943/pexels-photo-219943.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=750&w=1260',\r\n      alt: 'Group of Horses Running',\r\n    },\r\n  ];\r\n\r\n  const galleryRef = document.querySelector('#gallery');\r\n  function createMarkup(arr){\r\n\r\n    const listEl = arr.map(el=>{\r\n        const liEl =  document.createElement('li');\r\n        const imgEl = document.createElement('img');\r\n        imgEl.alt = el.alt;\r\n        imgEl.src = el.url;\r\n        liEl.append(imgEl);\r\n        return liEl;\r\n    } )\r\n\r\n      return listEl;\r\n  };\r\n  const markupArr = createMarkup(images);\r\n  const markupArrString = markupArr.join('');\r\n\r\n  function createStringMarkup(arr){\r\n      const outHtml = arr.map(el=>el.outerHTML);\r\n      return outHtml;\r\n  };\r\n  const markupString = createStringMarkup(markupArr).join('');\r\n  galleryRef.insertAdjacentHTML('afterbegin', markupString);\r\n","const inputRef = document.querySelector('#validation-input');\r\n\r\n\r\ninputRef.onblur = function(){\r\n    if(this.value.length > this.getAttribute('data-length')){\r\n        this.classList.remove('valid');\r\n        this.classList.add('invalid');\r\n    }else if(this.value.length < this.getAttribute('data-length')) {\r\n        this.classList.remove('valid');\r\n        this.classList.add('invalid');\r\n\r\n    }else{\r\n        this.classList.remove('invalid')\r\n        this.classList.add('valid');\r\n    }\r\n}","const counterRef = document.querySelector('#counter');\r\nconst valueRef = counterRef.querySelector('#value');\r\n\r\n\r\nlet counterValue = 0;\r\n\r\n\r\ncounterRef.addEventListener('click', countFunc);\r\n\r\nfunction decrement(){\r\n    counterValue-=1;\r\n    \r\n};\r\n\r\nfunction increment(){\r\n    counterValue+=1;\r\n};\r\n\r\n\r\nfunction countFunc(event){\r\n    const act = event.target.getAttribute('data-action');\r\n    if(act === 'decrement'){\r\n        decrement();\r\n    };\r\n    if(act === 'increment'){\r\n        increment();\r\n    };\r\n    valueRef.textContent = counterValue;\r\n\r\n};\r\n\r\n\r\n\r\n\r\n","const inputRef = document.querySelector('#font-size-control');\r\nconst spanRef = document.querySelector('#text');\r\n\r\ninputRef.addEventListener('input', inputRange);\r\nfunction inputRange(e){\r\n    spanRef.style.fontSize = e.currentTarget.value + 'px';\r\n}"],"sourceRoot":""}